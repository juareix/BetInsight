import streamlit as st
import pandas as pd
from api import get_teams_by_competition, get_last_matches_by_team
from utils import partidas_para_df, calcular_medias_gols

st.set_page_config(page_title="ğŸ“ˆ EstatÃ­sticas de Times", page_icon="ğŸ“Š")
st.title("ğŸ“ˆ EstatÃ­sticas de Times")

# SeleÃ§Ã£o da competiÃ§Ã£o
comp = st.selectbox("Selecione a competiÃ§Ã£o", ["PL", "PD", "SA", "FL1", "BL1"])  # Premier, La Liga, SÃ©rie A...

# Carrega times da competiÃ§Ã£o
times = get_teams_by_competition(comp)
nomes = [t["name"] for t in times]
time_escolhido = st.selectbox("Escolha o time", nomes)

# SeleÃ§Ã£o de temporada
temporadas = ["2024", "2023", "2022"]
temporada = st.selectbox("Temporada", temporadas)

# BotÃ£o para buscar estatÃ­sticas
if st.button("Buscar estatÃ­sticas"):
    time = next(t for t in times if t["name"] == time_escolhido)
    partidas = get_last_matches_by_team(time["id"], season=temporada, limit=10)
    
    if not partidas:
        st.warning("Nenhuma partida encontrada para esse time nessa temporada.")
    else:
        df = partidas_para_df(partidas, time["id"])
        media_pro, media_contra = calcular_medias_gols(df)

        st.metric("âš½ MÃ©dia de Gols Marcados", f"{media_pro:.2f}")
        st.metric("ğŸ¥… MÃ©dia de Gols Sofridos", f"{media_contra:.2f}")

        st.dataframe(df)
